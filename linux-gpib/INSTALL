
Installing Linux-GPIB
--------------------------------------------------------------------

A) First steps:
---------------

o) Installing your Hardware:
	If you have an old ISA board it may need to be configured by setting
	the appropriate board jumpers or switches
	for its base-address, interrupt-level (IRQ) and dma-request channel (DMA).
	Please choose a free base-address, irq and dma for your system
	(refer to your
	hardware documentation for this). Take a look to /proc/interrupts
	or /proc/dma
	for already used interrupt and dma lines. Now shut down your system and
	install the board in your computer.

o) Unpacking the Software:
	Choose a directory on your system where linux-gpib should reside,
	cd to this directory and unpack the archives with the 'tar' program.

	You will also need the linux kernel source code, which the linux-gpib
	package reads for header files and compilation variables when compiling
	the gpib kernel module.  Ideally, you have the linux source your
	current kernel was compiled from, or are willing to compile
	a fresh kernel.  Otherwise, you can prepare a kernel source tree that matches
	the kernel you are currently running if you have its config file (in
	the Debian distibution the config files for the kernel-image packages
	are in the /boot directory).  Perform the following steps:
	1) Get a copy of the kernel source that matches the kernel you are
		running.  Unpack it and copy your kernel config file to '.config'
		in the top directory of your kernel source.  Note: you will need
		to have write permission to your kernel source
		directory the first time you run 'make config' in your
		linux-gpib directory (see below), so it might be easiest to unpack
		the kernel source into a user-owned directory.
	2) You might need to edit the file 'Makefile' in the kernel source.
		At the top of the Makefile, the variable EXTRAVERSION is defined.
		If necessary, change it to match your kernel (for example, if the command
		'uname -r' produces "2.4.16-386" then your EXTRAVERSION should be
		set as 'EXTRAVERSION=-386'.
	3) run 'make oldconfig' in your kernel source directory.
	4) run 'make dep' in the kernel source directory.


B) Installing Linux-GPIB
-------------------------

o) cd to your linux-gpib directory and run the './configure' script.
	run './configure --help' for a list of the possible options.
	In particular, the '--with-linux-srcdir' option is useful for
	specifying the location of your Linux kernel source directory,
	and the '--enable-pcmcia' option is useful for laptops.

	If the configure script does not exist (you are using a cvs
	checkout), it can be generated by running the './bootstrap'
	script.

	Type 'make'.  Now the Package will be compiled.

	Type 'make install' (as root).  This will copy the kernel driver to
	/lib/modules/<kernel version>/gpib as well as install the library
	and headers files.  Make sure the directory you installed the
	shared library to is listed in your /etc/ld.so.conf file,
	so that ld can find libgpib.so.  If the directory is not listed,
	add it and then run 'ldconfig'.

	If you are using a PCMCIA board, copy the files in the etc/pcmcia
	subdirectory to /etc/pcmcia.  You may need to send a SIGHUP signal
	to the cardmgr daemon to force it to reload the files in 
	/etc/pcmcia (alternatively you could use your pcmcia init.d script
	to restart the cardmgr, or you could just reboot).

	To give a user access to the computer's gpib board you will have to add
	them to the group 'gpib' (you can use the 'usermod' tool to change the
	groups a user belongs to).  Or, you could change the
	permissions on the device files /dev/gpib[0-15] to something you like
	better, using 'chmod' (or edit devfsd.conf if you are using devfs).

C) Configuring the GPIB-Library
-------------------------------

	Edit /etc/gpib.conf to match your interface board, and any devices you wish
	to open via ibfind().  See the documentation in doc/ for
	more information.

D) Loading the driver module
-----------------------------

	You can load the driver module by typing

		modprobe <driver name>

	See the documentation in doc/ to see which driver your board is supported
	by.

	You need to run the 'gpib_config' utility to setup the driver
	before you can use it (the 'minor' options specifies which
	board index you are setting up):

		gpib_config --minor 0

	You can also set up the modules to load automatically by adding lines
	something like (this does NOT apply to PCMCIA cards)

	alias char-major-160 gpib_common
	alias char-major-160-0 tnt4882
	post-install tnt4882 export PATH=/sbin:/usr/sbin:/usr/local/sbin:$PATH;gpib_config --minor 0

	to /etc/modules.conf, which would autoload the tnt4882.o module when
	the library is used.

	For PCMCIA cards, you may need to edit the gpib_config call in the
	/etc/pcmcia/linux-gpib-pcmcia script.

	You may find the examples/ibtest program useful as a starting point in trying
	out your setup.

E) Bindings for other languages
-------------------------------

	The bindings to other languages will be enabled by default in the
	'./configure' script.  They will not be built if you disable
	them with the appropriate configure option, or if the necessary
	header files/libraries are not found on your machine.

